
name: "Terraform Infrastructure Change Management Pipeline with GitHub Actions"

on:
  push:
    branches:
    - main
    paths:
    - terraform/**
  pull_request:
    branches:
    - main
    paths:
    - terraform/**

env:
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  BUCKET_TF_STATE: ${{secrets.BUCKET_TF_STATE}}

jobs:
  terraform-apply:
    name: "Terraform Infrastructure Change Management"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.1

      # TFLint - Terraform Check
      - uses: actions/cache@v2
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@v2
        name: Setup TFLint
        with:
          github_token: ${{ secrets.CI_GITHUB_TOKEN }}
        
    # Print TFLint version
      - name: Show version
        run: tflint --version
        
    # Install plugins
      - name: Init TFLint
        run: tflint --init
        
    # Run tflint command in each directory recursively # use --force if you want to continue with workflow although errors are there
      - name: Run TFLint
        run: tflint -f compact --recursive 

      - name: Run Tfsec security scan
        uses: aquasecurity/tfsec-action@v1.0.0
      
      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform format
        id: fmt
        run: terraform fmt

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
      
